{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Desktop/code/ourBirdOcrProject/frontend/src/components/UploadImage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      await axios.post('http://localhost:5000/api/image/upload', formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      alert('Image uploaded!');\n      navigate('/gallery');\n    } catch (err) {\n      alert(err.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Bird Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setFile(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/gallery'),\n      children: \"View Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadImage, \"a8hUmGYItl0fyIx8Tvn6au4ZieE=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["useState","axios","useNavigate","jsxDEV","_jsxDEV","UploadImage","_s","file","setFile","navigate","handleSubmit","e","preventDefault","formData","FormData","append","post","headers","Authorization","localStorage","getItem","alert","err","response","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","target","files","required","onClick","_c","$RefreshReg$"],"sources":["/Users/jacob/Desktop/code/ourBirdOcrProject/frontend/src/components/UploadImage.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction UploadImage() {\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      await axios.post('http://localhost:5000/api/image/upload', formData, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n      alert('Image uploaded!');\n      navigate('/gallery');\n    } catch (err) {\n      alert(err.response.data.error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload Bird Image</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" accept=\"image/*\" onChange={(e) => setFile(e.target.files[0])} required />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <button onClick={() => navigate('/gallery')}>View Gallery</button>\n    </div>\n  );\n}\n\nexport default UploadImage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAER,IAAI,CAAC;IAC9B,IAAI;MACF,MAAMN,KAAK,CAACe,IAAI,CAAC,wCAAwC,EAAEH,QAAQ,EAAE;QACnEI,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAG;MACtE,CAAC,CAAC;MACFC,KAAK,CAAC,iBAAiB,CAAC;MACxBZ,QAAQ,CAAC,UAAU,CAAC;IACtB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZD,KAAK,CAACC,GAAG,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1B,OAAA;MAAM2B,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBAC3BtB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,SAAS;QAACC,QAAQ,EAAGvB,CAAC,IAAKH,OAAO,CAACG,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;QAACC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5F1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACP1B,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAM7B,QAAQ,CAAC,UAAU,CAAE;MAAAiB,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV;AAACxB,EAAA,CA7BQD,WAAW;EAAA,QAEDH,WAAW;AAAA;AAAAqC,EAAA,GAFrBlC,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}